cmake_minimum_required(VERSION 3.10)
# TODO: Make a top-level CMakeLists.txt and put plaform specifics in each Platform/PlaformName/CMakeLists.txt
set(PLATFORM_NAME "SDL2")

project(taref-sdl2 VERSION 0.0.0 LANGUAGES C)
set(CMAKE_VERBOSE_MAKEFILE on)

set(EXECUTABLE_NAME "${PROJECT_NAME}")
set(EXECUTABLE_SOURCES
	"../../Game/BgMap.c"
	"../../Game/BuildData.c"
	"../../Game/Button.c"
	"../../Game/Checksum.c"
	"../../Game/Coin.c"
	"../../Game/Credit.c"
	"../../Game/Debug.c"
	"../../Game/DelayTable.c"
	"../../Game/DemoLoop.c"
	"../../Game/DisplayObject.c"
	"../../Game/Eeprom.c"
	"../../Game/Entity.c"
	"../../Game/Frame.c"
	"../../Game/GameBg.c"
	"../../Game/GameLoop.c"
	"../../Game/Grade.c"
	"../../Game/GravityTable.c"
	"../../Game/Input.c"
	"../../Game/Item.c"
	"../../Game/LibC.c"
	"../../Game/Main.c"
	"../../Game/MainLoop.c"
	"../../Game/Math.c"
	"../../Game/Medal.c"
	"../../Game/MemCheck.c"
	"../../Game/Pal.c"
	"../../Game/Player.c"
	"../../Game/Ranking.c"
	"../../Game/RankingCode.c"
	"../../Game/RegionWarning.c"
	"../../Game/Save.c"
	"../../Game/Screen.c"
	"../../Game/Sequence.c"
	"../../Game/Setting.c"
	"../../Game/ShowBlockField.c"
	"../../Game/ShowClearTime.c"
	"../../Game/ShowColumnMarker.c"
	"../../Game/ShowEffect.c"
	"../../Game/ShowGameOverFade.c"
	"../../Game/ShowGameStatus.c"
	"../../Game/ShowItemEffect.c"
	"../../Game/ShowItemWarningColorBlock.c"
	"../../Game/ShowItemWarningDarkBlock.c"
	"../../Game/ShowItemWarningDeathBlock.c"
	"../../Game/ShowItemWarningExchgField.c"
	"../../Game/ShowItemWarningHardBlock.c"
	"../../Game/ShowItemWarningMirrorBlock.c"
	"../../Game/ShowItemWarningNegaField.c"
	"../../Game/ShowItemWarningRollRoll.c"
	"../../Game/ShowItemWarningShotgun.c"
	"../../Game/ShowItemWarningTransform.c"
	"../../Game/ShowItemWarningXRay.c"
	"../../Game/ShowLaser.c"
	"../../Game/ShowNewChallenger.c"
	"../../Game/ShowObject.c"
	"../../Game/ShowRowDel.c"
	"../../Game/ShowStaff.c"
	"../../Game/ShowText.c"
	"../../Game/Sound.c"
	"../../Game/SpriteInit.c"
	"../../Game/Temp.c"
	"../../Game/TestLoop.c"
	"../../Game/UnknownSprite.c"
	"../../Game/UpdateItemBottomDelField.c"
	"../../Game/UpdateItemColorBlock.c"
	"../../Game/UpdateItemDarkBlock.c"
	"../../Game/UpdateItemDeathBlock.c"
	"../../Game/UpdateItemDelEven.c"
	"../../Game/UpdateItemExchgField.c"
	"../../Game/UpdateItemFlipField.c"
	"../../Game/UpdateItemFreeFall.c"
	"../../Game/UpdateItemHardBlock.c"
	"../../Game/UpdateItemLaser.c"
	"../../Game/UpdateItemLeftMovField.c"
	"../../Game/UpdateItemMirrorBlock.c"
	"../../Game/UpdateItemNegaField.c"
	"../../Game/UpdateItemRightMovField.c"
	"../../Game/UpdateItemRollRoll.c"
	"../../Game/UpdateItemShotgun.c"
	"../../Game/UpdateItemTopDelField.c"
	"../../Game/UpdateItemTransform.c"
	"../../Game/UpdateItemXRay.c"
	"../../Game/Versus.c"
	"../../Game/Video.c"

	"../Util/HwData.c"
	"../Util/RomData.c"

	"PlatformUpdate.c"
)
set(EXECUTABLE_HEADERS
	"../../Game/BgMap.h"
	"../../Game/Block.h"
	"../../Game/BuildData.h"
	"../../Game/Button.h"
	"../../Game/Checksum.h"
	"../../Game/ChecksumData.h"
	"../../Game/Coin.h"
	"../../Game/Credit.h"
	"../../Game/Debug.h"
	"../../Game/DelayTable.h"
	"../../Game/DemoLoop.h"
	"../../Game/DisplayObject.h"
	"../../Game/Eeprom.h"
	"../../Game/Entity.h"
	"../../Game/Fixed.h"
	"../../Game/Frame.h"
	"../../Game/GameBg.h"
	"../../Game/GameLoop.h"
	"../../Game/Grade.h"
	"../../Game/GravityTable.h"
	"../../Game/HwData.h"
	"../../Game/HwInput.h"
	"../../Game/HwSprite.h"
	"../../Game/Input.h"
	"../../Game/Item.h"
	"../../Game/Layer.h"
	"../../Game/LibC.h"
	"../../Game/Macros.h"
	"../../Game/Main.h"
	"../../Game/MainLoop.h"
	"../../Game/Math.h"
	"../../Game/Matrix.h"
	"../../Game/Medal.h"
	"../../Game/MemCheck.h"
	"../../Game/Music.h"
	"../../Game/Object.h"
	"../../Game/Pal.h"
	"../../Game/PalNum.h"
	"../../Game/Player.h"
	"../../Game/Ranking.h"
	"../../Game/RankingCode.h"
	"../../Game/RegionWarning.h"
	"../../Game/Save.h"
	"../../Game/Screen.h"
	"../../Game/Sequence.h"
	"../../Game/Setting.h"
	"../../Game/ShowBlockField.h"
	"../../Game/ShowClearTime.h"
	"../../Game/ShowColumnMarker.h"
	"../../Game/ShowEffect.h"
	"../../Game/ShowGameOverFade.h"
	"../../Game/ShowGameStatus.h"
	"../../Game/ShowItemEffect.h"
	"../../Game/ShowItemWarningColorBlock.h"
	"../../Game/ShowItemWarningDarkBlock.h"
	"../../Game/ShowItemWarningDeathBlock.h"
	"../../Game/ShowItemWarningExchgField.h"
	"../../Game/ShowItemWarningHardBlock.h"
	"../../Game/ShowItemWarningMirrorBlock.h"
	"../../Game/ShowItemWarningNegaField.h"
	"../../Game/ShowItemWarningRollRoll.h"
	"../../Game/ShowItemWarningShotgun.h"
	"../../Game/ShowItemWarningTransform.h"
	"../../Game/ShowItemWarningXRay.h"
	"../../Game/ShowLaser.h"
	"../../Game/ShowNewChallenger.h"
	"../../Game/ShowObject.h"
	"../../Game/ShowRowDel.h"
	"../../Game/ShowStaff.h"
	"../../Game/ShowText.h"
	"../../Game/Sound.h"
	"../../Game/SoundEffect.h"
	"../../Game/SpriteInit.h"
	"../../Game/Temp.h"
	"../../Game/TestLoop.h"
	"../../Game/UnknownSprite.h"
	"../../Game/UpdateItemBottomDelField.h"
	"../../Game/UpdateItemColorBlock.h"
	"../../Game/UpdateItemDarkBlock.h"
	"../../Game/UpdateItemDeathBlock.h"
	"../../Game/UpdateItemDelEven.h"
	"../../Game/UpdateItemExchgField.h"
	"../../Game/UpdateItemFlipField.h"
	"../../Game/UpdateItemFreeFall.h"
	"../../Game/UpdateItemHardBlock.h"
	"../../Game/UpdateItemLaser.h"
	"../../Game/UpdateItemLeftMovField.h"
	"../../Game/UpdateItemMirrorBlock.h"
	"../../Game/UpdateItemNegaField.h"
	"../../Game/UpdateItemRightMovField.h"
	"../../Game/UpdateItemRollRoll.h"
	"../../Game/UpdateItemShotgun.h"
	"../../Game/UpdateItemTopDelField.h"
	"../../Game/UpdateItemTransform.h"
	"../../Game/UpdateItemXRay.h"
	"../../Game/Versus.h"
	"../../Game/Video.h"
	"../../Game/VideoDefs.h"

	"../Util/Color.h"
	"../Util/Macros.h"

	"PlatformSupport/PlatformUpdate.h"
	"PlatformSupport/PlatformTypes.h"
)

add_executable("${EXECUTABLE_NAME}" ${EXECUTABLE_SOURCES} ${EXECUTABLE_HEADERS})
source_group("Header Files" FILES ${EXECUTABLE_HEADERS})
target_include_directories("${EXECUTABLE_NAME}" PUBLIC "../.." "../../Generated" "PlatformSupport")

set_property(
	TARGET "${EXECUTABLE_NAME}"
	PROPERTY VS_DEBUGGER_WORKING_DIRECTORY
	${CMAKE_SOURCE_DIR}
)

find_package(PkgConfig)
if(NOT PKG_CONFIG_FOUND AND VCPKG_TOOLCHAIN)
	set(VCPKG_CRT_LINKAGE dynamic)
	set(VCPKG_LIBRARY_LINKAGE dynamic)
endif()

install(TARGETS "${EXECUTABLE_NAME}" RUNTIME)